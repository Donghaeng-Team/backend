plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bytogether'
version = '0.0.1-SNAPSHOT'
description = 'chat-service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// swagger
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	// config client, eureka client
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// message broker
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// 빌드 오류
	implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
